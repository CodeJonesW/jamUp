[{"/Users/thegoods/Development/jamUpReact/jamup/src/index.js":"1","/Users/thegoods/Development/jamUpReact/jamup/src/App.js":"2","/Users/thegoods/Development/jamUpReact/jamup/src/global.js":"3","/Users/thegoods/Development/jamUpReact/jamup/src/theme.js":"4","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js":"5","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js":"6","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js":"7","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js":"8","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js":"9","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js":"10","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js":"11","/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js":"12","/Users/thegoods/Development/jamUpReact/jamup/src/utils/jamAPI.js":"13","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/infoHeader.js":"14","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/profile.js":"15","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Profile.js":"16","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/About.js":"17"},{"size":426,"mtime":1612238048410,"results":"18","hashOfConfig":"19"},{"size":1467,"mtime":1613837672405,"results":"20","hashOfConfig":"19"},{"size":658,"mtime":1613276132072,"results":"21","hashOfConfig":"19"},{"size":133,"mtime":1611507660777,"results":"22","hashOfConfig":"19"},{"size":11695,"mtime":1614564361061,"results":"23","hashOfConfig":"19"},{"size":2370,"mtime":1614560750086,"results":"24","hashOfConfig":"19"},{"size":2614,"mtime":1613679576520,"results":"25","hashOfConfig":"19"},{"size":5992,"mtime":1613681260295,"results":"26","hashOfConfig":"19"},{"size":2158,"mtime":1613679603328,"results":"27","hashOfConfig":"19"},{"size":2045,"mtime":1613851578877,"results":"28","hashOfConfig":"19"},{"size":2042,"mtime":1613838944293,"results":"29","hashOfConfig":"19"},{"size":2857,"mtime":1612236248932,"results":"30","hashOfConfig":"19"},{"size":3731,"mtime":1614564392106,"results":"31","hashOfConfig":"19"},{"size":1636,"mtime":1613679644760,"results":"32","hashOfConfig":"19"},{"size":152,"mtime":1613196540041,"results":"33","hashOfConfig":"19"},{"size":152,"mtime":1613196540041,"results":"34","hashOfConfig":"19"},{"size":4878,"mtime":1613852385550,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"l4gjh",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},"/Users/thegoods/Development/jamUpReact/jamup/src/index.js",[],["73","74"],"/Users/thegoods/Development/jamUpReact/jamup/src/App.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/global.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/theme.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js",["75","76","77","78"],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js",["79"],"import React, { useRef } from 'react';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"1px\"\n  },\n  link: {\n    width: \"24%\",\n    marginTop: '5%',\n    margin: \"1%\",\n    borderRadius: \"1px\"\n  },\n  h1: {\n    width: \"50%\",\n    marginTop: '5%',\n    textAlign: 'center'\n\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: \"1px\"\n\n  },\n  outerDiv: {\n    marginTop: '10%',\n    width: \"100%\",\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  linkDiv: {\n    display:\"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: 'center',\n  }\n}));\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  const auth = useAuth()\n  const signInEmailInput = useRef(null);\n  const signInPasswordInput = useRef(null);\n\n  const handleSubmit = async () => {\n    let newUser = await auth.signin(signInEmailInput.current.value, signInPasswordInput.current.value)\n  }\n  return (\n    <div className={classes.body}>\n        <div className={classes.outerDiv} >\n          <h1 className={classes.h1} >JamUp</h1>\n\n          <input className={classes.input} ref={signInEmailInput} placeholder=\"Email\" />\n          <input className={classes.input} type=\"password\" ref={signInPasswordInput} placeholder=\"password\" />\n          <Button variant=\"contained\" className={classes.input} onClick={handleSubmit} >Submit </Button>\n          <div className={classes.linkDiv}>\n          <Link  className={classes.link} to=\"/signup\"><Button variant=\"contained\" className={classes.button}> Sign Up</Button></Link>\n          <Link  className={classes.link} to=\"/about\"><Button variant=\"contained\" className={classes.button}> About</Button></Link>\n\n          </div>\n\n\n        </div>\n    </div>\n    \n  )\n\n}\n\n\n\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/utils/jamAPI.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/infoHeader.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/profile.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Profile.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/public/About.js",["80","81"],"import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"5px\"\n\n  },\n  link: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"5px\"\n\n  },\n  submit: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"5px\"\n\n  },\n  h1: {\n    width: \"50%\",\n    marginTop: '5%',\n    textAlign: 'center'\n\n  },\n  button: {\n    width: \"100%\",\n    marginTop: '5%'\n\n  },\n  outerDiv: {\n    marginLeft: '25%',\n    width: \"50%\",\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  root: {\n    minWidth: \"80%\",\n    height: \"100%\",\n    margin: \"1%\"\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n\nexport default function About(props) {\n  const classes = useStyles();\n\n  return (\n    \n        <div className={classes.outerDiv} >\n          <h1 className={classes.h1} > About Us</h1>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography variant=\"h5\" className={classes.pos} color=\"textSecondary\">\n                Welcome to JamUp!\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                - Our goal is to connect musicians online by cordinating meeting times on various applications so we can all practice remotely.\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                - Jams are stored in UTC time and converted to your local time for everyone's convenience.\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\" >\n                - Currently our favorite application for online jamming is called <a target=\"_blank\" href=\"https://jamulus.io/\">Jamulus</a>\n                </Typography>\n            </CardContent>\n            <CardActions>\n               \n            </CardActions>\n         </Card>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                Genre: Funk\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    Title: Late Night Groove\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                Info: All instruments welcome! \n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                Location/Server: Server Name and Connection Details\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                🕰 Time: = Local Time\n                </Typography>\n            </CardContent>\n            <CardActions>\n               \n            </CardActions>\n         </Card>\n       \n         <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography variant=\"h5\" className={classes.pos} color=\"textSecondary\">\n                Creating a Jam\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n               - When creating a jam, providing the correct CONNECTION DETAILS are very important for jams to actually happen!\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                - When using Jamulus make sure to include the SERVER NAME, LIST GENRE, and TIME. If you are using another application for jamming, list it and the necessary connection details.\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                - Make sure to sign up for jams you create to tell others you are also attending : )\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                - JamUp is an ongoing project. We look forward to improving upon ther initial design. If you are interested in helping us grow, join us in our <a target=\"_blank\" href=\"https://discord.gg/xhPZPNYzSJ\">Discord</a>\n                </Typography>\n            </CardContent>\n            <CardActions>\n               \n            </CardActions>\n         </Card>\n\n\n          <Link  className={classes.link} to=\"/\"><Button variant=\"contained\" className={classes.button}> back</Button></Link>\n    \n\n        </div>\n    \n  )\n\n}\n\n\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":38,"column":16,"nodeType":"88","endLine":72,"endColumn":6},{"ruleId":"86","severity":1,"message":"89","line":72,"column":8,"nodeType":"90","endLine":72,"endColumn":10,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"92","line":120,"column":8,"nodeType":"90","endLine":120,"endColumn":20,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":141,"column":10,"nodeType":"90","endLine":141,"endColumn":21,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":57,"column":9,"nodeType":"98","messageId":"99","endLine":57,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":88,"column":83,"nodeType":"102","endLine":88,"endColumn":129},{"ruleId":"100","severity":1,"message":"101","line":133,"column":160,"nodeType":"102","endLine":133,"endColumn":216},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'jamsToSearch'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has a missing dependency: 'jamData'. Either include it or remove the dependency array. You can also do a functional update 'setJams(j => ...)' if you only need 'jamData' in the 'setJams' call.",["107"],"no-unused-vars","'newUser' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [auth]",{"range":"114","text":"115"},"Update the dependencies array to be: [jamsToSearch, searchTerm]",{"range":"116","text":"117"},"Update the dependencies array to be: [jamData, postedJam]",{"range":"118","text":"119"},[1922,1924],"[auth]",[3362,3374],"[jamsToSearch, searchTerm]",[3985,3996],"[jamData, postedJam]"]