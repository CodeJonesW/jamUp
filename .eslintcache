[{"/Users/thegoods/Development/jamUpReact/jamup/src/index.js":"1","/Users/thegoods/Development/jamUpReact/jamup/src/App.js":"2","/Users/thegoods/Development/jamUpReact/jamup/src/global.js":"3","/Users/thegoods/Development/jamUpReact/jamup/src/theme.js":"4","/Users/thegoods/Development/jamUpReact/jamup/src/firebase.js":"5","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js":"6","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js":"7","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js":"8","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js":"9","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js":"10","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js":"11","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js":"12","/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js":"13"},{"size":426,"mtime":1612238048410,"results":"14","hashOfConfig":"15"},{"size":1008,"mtime":1612241030430,"results":"16","hashOfConfig":"15"},{"size":658,"mtime":1611511532535,"results":"17","hashOfConfig":"15"},{"size":133,"mtime":1611507660777,"results":"18","hashOfConfig":"15"},{"size":509,"mtime":1611729582683,"results":"19","hashOfConfig":"15"},{"size":1558,"mtime":1612237725120,"results":"20","hashOfConfig":"15"},{"size":1384,"mtime":1612245979866,"results":"21","hashOfConfig":"15"},{"size":1063,"mtime":1612245810211,"results":"22","hashOfConfig":"15"},{"size":6902,"mtime":1612234312687,"results":"23","hashOfConfig":"15"},{"size":989,"mtime":1612240515661,"results":"24","hashOfConfig":"15"},{"size":1169,"mtime":1612241702145,"results":"25","hashOfConfig":"15"},{"size":1594,"mtime":1612241628820,"results":"26","hashOfConfig":"15"},{"size":2857,"mtime":1612236248932,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"l4gjh",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/thegoods/Development/jamUpReact/jamup/src/index.js",[],["59","60"],"/Users/thegoods/Development/jamUpReact/jamup/src/App.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/global.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/theme.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/firebase.js",[],["61","62"],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js",["63","64","65"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PrimarySearchAppBar from './PrimaryBar'\nimport JamContainer from './JamContainer'\nimport SideMenu from './SideMenu'\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Redirect} from 'react-router-dom';\n\nconst Dashboard = (props) => {\n    const auth = useAuth();\n    const [jamData, setJams] = useState(\"\");\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n    const [filteredJams, setFilteredJams] = React.useState(\"\");\n  \n    useEffect(() => {\n      fetch('http://localhost:3000/jams')\n      .then(res => res.json())\n      .then(data => {\n        setJams(data.allJams)\n      })\n  \n     \n    }, []);\n  \n    useEffect(() => {\n      if(jamData){\n        const results = jamData.filter(jam =>\n          jam.title.toLowerCase().includes(searchTerm)\n        );\n        setFilteredJams(results);\n      }\n  \n    }, [searchTerm]);\n  \n  \n  \n    const handleJamSearch = (e) => {\n      setSearchTerm(e.target.value);\n    }\n\n  \n\n    return (\n        <div>\n            <PrimarySearchAppBar handleJamSearch={handleJamSearch}></PrimarySearchAppBar>\n            <Grid container fluid=\"true\">\n                <Grid item xs={2}>\n                    <SideMenu handleSignOut={props.handleSignOut} />\n                </Grid>\n\n                <Grid item xs={10}>\n                    <JamContainer jamData={jamData} filteredJams={filteredJams}/>\n                </Grid>\n            </Grid>\n        </div>\n      \n    )\n   \n    \n    \n};\n\n\nexport default Dashboard;","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js",["66"],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js",["67"],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js",["68"],"import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n  const auth = useAuth();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            jamUp\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              onChange={(e) => props.handleJamSearch(e)}\n              placeholder=\"Search Jams...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js",["69"],"import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  newClass: {\n    width: \"50%\",\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: \"2%\"\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const auth = useAuth();\n  const signUpEmailInput = useRef(null);\n  const signUpPasswordInput = useRef(null);\n  const signUpConfirmPasswordInput = useRef(null);\n  \n  const handleSubmit = (e) => {\n    if(signUpPasswordInput.current.value !== signUpConfirmPasswordInput.current.value){\n      alert(\"Passwords do not match\")\n      signUpConfirmPasswordInput.current.focus();\n      return\n    }\n\n    let user = auth.signup(signUpEmailInput.current.value, signUpPasswordInput.current.value)\n    console.log(user.email)\n  }\n\n  return (\n    <div>\n    <h1 className={classes.newClass}>Sign up with email and password</h1>\n  \n        <input className={classes.newClass} ref={signUpEmailInput} placeholder=\"Email\"/>\n        <input type=\"password\" className={classes.newClass}ref={signUpPasswordInput} placeholder=\"Password\"/>\n        <input type=\"password\" className={classes.newClass}ref={signUpConfirmPasswordInput} placeholder=\"Confirm Password\"/>\n        <button className={classes.newClass} onClick={(e) => handleSubmit(e)}>submit</button>\n        <Link to=\"/\"><button className={classes.newClass}> Already have an account?</button></Link>\n    </div>\n  );\n}","/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":7,"column":10,"nodeType":"78","messageId":"79","endLine":7,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":10,"column":11,"nodeType":"78","messageId":"79","endLine":10,"endColumn":15},{"ruleId":"81","severity":1,"message":"82","line":33,"column":8,"nodeType":"83","endLine":33,"endColumn":20,"suggestions":"84"},{"ruleId":"76","severity":1,"message":"80","line":30,"column":9,"nodeType":"78","messageId":"79","endLine":30,"endColumn":13},{"ruleId":"76","severity":1,"message":"80","line":7,"column":7,"nodeType":"78","messageId":"79","endLine":7,"endColumn":11},{"ruleId":"76","severity":1,"message":"80","line":84,"column":9,"nodeType":"78","messageId":"79","endLine":84,"endColumn":13},{"ruleId":"76","severity":1,"message":"85","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'auth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'jamData'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [jamData, searchTerm]",{"range":"91","text":"92"},[927,939],"[jamData, searchTerm]"]