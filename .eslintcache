[{"/Users/thegoods/Development/jamUpReact/jamup/src/index.js":"1","/Users/thegoods/Development/jamUpReact/jamup/src/App.js":"2","/Users/thegoods/Development/jamUpReact/jamup/src/global.js":"3","/Users/thegoods/Development/jamUpReact/jamup/src/theme.js":"4","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js":"5","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js":"6","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js":"7","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js":"8","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js":"9","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js":"10","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js":"11","/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js":"12","/Users/thegoods/Development/jamUpReact/jamup/src/utils/jamAPI.js":"13","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/infoHeader.js":"14","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/profile.js":"15","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Profile.js":"16","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/About.js":"17"},{"size":426,"mtime":1612238048410,"results":"18","hashOfConfig":"19"},{"size":1306,"mtime":1613276540396,"results":"20","hashOfConfig":"19"},{"size":658,"mtime":1613276132072,"results":"21","hashOfConfig":"19"},{"size":133,"mtime":1611507660777,"results":"22","hashOfConfig":"19"},{"size":11323,"mtime":1613666006963,"results":"23","hashOfConfig":"19"},{"size":2136,"mtime":1613187185671,"results":"24","hashOfConfig":"19"},{"size":2685,"mtime":1613168404480,"results":"25","hashOfConfig":"19"},{"size":5965,"mtime":1613190747269,"results":"26","hashOfConfig":"19"},{"size":2097,"mtime":1613665780164,"results":"27","hashOfConfig":"19"},{"size":1983,"mtime":1613278580311,"results":"28","hashOfConfig":"19"},{"size":2026,"mtime":1612846076906,"results":"29","hashOfConfig":"19"},{"size":2857,"mtime":1612236248932,"results":"30","hashOfConfig":"19"},{"size":3578,"mtime":1613663734084,"results":"31","hashOfConfig":"19"},{"size":1775,"mtime":1613191103584,"results":"32","hashOfConfig":"19"},{"size":152,"mtime":1613196540041,"results":"33","hashOfConfig":"19"},{"size":152,"mtime":1613196540041,"results":"34","hashOfConfig":"19"},{"size":3580,"mtime":1613278306357,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"l4gjh",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},"/Users/thegoods/Development/jamUpReact/jamup/src/index.js",[],["78","79"],"/Users/thegoods/Development/jamUpReact/jamup/src/App.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/global.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/theme.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js",["80","81","82"],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js",["83"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100%\",\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function Jam(props) {\n  const classes = useStyles();\n  const auth = useAuth();\n  // console.log(props.jamDate)\n\n  const date = new Date(props.jamDate);\n  let dateArray = date.toString().split(\" \")\n  let renderDate = dateArray[0] + \", \" + dateArray[1] + \" \" + dateArray[2] + \", \" + dateArray[3] + \" \" + dateArray[4] + \" \" + dateArray[6][1] + dateArray[7][0] + dateArray[8][0] \n\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        {props.genre}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n            {props.title}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n        Info: {props.info}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Location/Server: {props.location}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          üï∞ Time: {renderDate}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button data-jamid={props.id} onClick={(e) => props.handleLearnMore(e, props)} size=\"small\">Learn More</Button>\n        <Button data-jamid={props.id} onClick={(e) => props.postFavoriteJam(e)} size=\"small\">‚ù§Ô∏è</Button>\n        {props.loggedInUserId === props.userId ? <Button data-jamid={props.id} onClick={(e) => props.handleDeleteJam(e)}size=\"small\">üóë</Button> : null}\n      </CardActions>\n    </Card>\n  );\n}\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js",["84"],"import React from 'react'\nimport Jam from './Jam.js'\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    jamDiv: {\n      padding: \"1%\",\n    },\n    jamContainer: {\n        padding: \"1%\",\n      }\n  });\n\n\nconst JamContainer = (props) => {\nconst classes = useStyles();\nconst auth = useAuth();\nif(props.filteredJams){\n    return (\n        <Grid className={classes.jamContainer} container fluid=\"true\">\n            {props.filteredJams.map((jam, index) => {\n                return (\n                    <Grid className={classes.jamDiv} key={index} item xs={12} sm={6}>\n                        <Jam jamDate={jam.jamDate} handleLearnMore={props.handleLearnMore} handleDeleteJam={props.handleDeleteJam} loggedInUserId={props.loggedInUserId} postFavoriteJam={(e) => props.postFavoriteJam(e)} title={jam.title} genre={jam.genre} info={jam.info} id={jam.id} userId={jam.userId} location={jam.location}/>\n                    </Grid>\n                )\n            })}\n        </Grid>\n    )\n} else if(props.displayFavorites && props.userFavoriteJams) {\n    return (\n        <Grid className={classes.jamContainer} container fluid=\"true\">\n        {/* {console.log(\"second return\", props.userFavoriteJams)} */}\n            {props.userFavoriteJams.map((jam, index) => {\n               \n                return (\n                    <Grid className={classes.jamDiv} key={index} item xs={12} sm={6}>\n                        <Jam jamDate={jam.jamDate} handleLearnMore={props.handleLearnMore} handleDeleteJam={props.handleDeleteJam} loggedInUserId={props.loggedInUserId} postFavoriteJam={(e) => props.postFavoriteJam(e)} title={jam.title} genre={jam.genre} info={jam.info} id={jam.jamId} userId={jam.userId} location={jam.location}/>\n                    </Grid>\n                )\n            })}\n        </Grid>\n    )\n} else {\n    return (\n        <Grid className={classes.jamContainer} container fluid=\"true\">\n            {props.jamData ? props.jamData.map((jam, index) => {\n                return(\n                    <Grid className={classes.jamDiv} key={index} item xs={12} sm={6}>\n                        <Jam jamDate={jam.jamDate} handleLearnMore={props.handleLearnMore} handleDeleteJam={props.handleDeleteJam} loggedInUserId={props.loggedInUserId} postFavoriteJam={(e) => props.postFavoriteJam(e)} title={jam.title} genre={jam.genre} info={jam.info} id={jam.id} userId={jam.userId} location={jam.location}/>\n                    </Grid>\n                )\n            }) : null}\n           \n           \n        </Grid>\n    )\n}\n   \n    \n    \n};\n\n\nexport default JamContainer;","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js",["85","86","87","88"],"import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n  const auth = useAuth();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>My Profile</MenuItem>\n      <MenuItem onClick={auth.signout} >Logout</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n    \n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            \n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            jamUp ü™ï\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              onChange={(e) => props.handleJamSearch(e)}\n              placeholder=\"Search Jams...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            \n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js",["89","90","91"],"/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js",["92","93","94"],"import React, { useRef } from 'react';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Row } from 'react-bootstrap';\n\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"1px\"\n  },\n  link: {\n    width: \"24%\",\n    marginTop: '5%',\n    margin: \"1%\",\n    borderRadius: \"1px\"\n  },\n  h1: {\n    width: \"50%\",\n    marginTop: '5%',\n    textAlign: 'center'\n\n  },\n  button: {\n    width: \"100%\",\n\n  },\n  outerDiv: {\n    marginTop: '10%',\n    width: \"100%\",\n    alignItems: 'center',\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  linkDiv: {\n    display:\"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: 'center',\n  }\n}));\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  const auth = useAuth()\n  const signInEmailInput = useRef(null);\n  const signInPasswordInput = useRef(null);\n\n  const handleSubmit = () => {\n    const user = auth.signin(signInEmailInput.current.value, signInPasswordInput.current.value)\n  }\n  return (\n    <div className={classes.body}>\n        <div className={classes.outerDiv} >\n          <h1 className={classes.h1} >JamUp</h1>\n\n          <input className={classes.input} ref={signInEmailInput} placeholder=\"Email\" />\n          <input className={classes.input} type=\"password\" ref={signInPasswordInput} placeholder=\"password\" />\n          <button className={classes.input} onClick={handleSubmit} >Submit </button>\n          <div className={classes.linkDiv}>\n          <Link  className={classes.link} to=\"/signup\"><button className={classes.button}> Click to Sign Up</button></Link>\n          <Link  className={classes.link} to=\"/about\"><button className={classes.button}> Learn About Us</button></Link>\n\n          </div>\n\n\n        </div>\n    </div>\n    \n  )\n\n}\n\n\n\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js",["95","96"],"import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Link } from 'react-router-dom';\nimport jamCalls from '../../utils/jamAPI'\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: \"50%\",\n    marginTop: '5%'\n\n  },\n  h1: {\n    width: \"50%\",\n    marginTop: '5%',\n    textAlign: 'center'\n\n  },\n  button: {\n    width: \"100%\",\n    marginTop: '5%'\n\n  },\n  outerDiv: {\n    marginTop: '10%',\n    width: \"100%\",\n    alignItems: 'center',\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex'\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const auth = useAuth();\n  const signUpEmailInput = useRef(null);\n  const signUpPasswordInput = useRef(null);\n  const signUpConfirmPasswordInput = useRef(null);\n  \n  const handleSubmit = async (e) => {\n    if(signUpPasswordInput.current.value !== signUpConfirmPasswordInput.current.value){\n      alert(\"Passwords do not match\")\n      signUpConfirmPasswordInput.current.focus();\n      return\n    }\n    let password = signUpPasswordInput.current.value\n    let user = await auth.signup(signUpEmailInput.current.value, password)\n    jamCalls.postUser({\"email\": user.email, \"firebase\": user.uid})\n  }\n\n  return (\n    <div className={classes.outerDiv}>\n    <h1 className={classes.h1}>Sign up with email and password</h1>\n  \n        <input className={classes.input} ref={signUpEmailInput} placeholder=\"Email\"/>\n        <input type=\"password\" className={classes.input}ref={signUpPasswordInput} placeholder=\"Password\"/>\n        <input type=\"password\" className={classes.input}ref={signUpConfirmPasswordInput} placeholder=\"Confirm Password\"/>\n        <button className={classes.input} onClick={(e) => handleSubmit(e)}>submit</button>\n        <Link className={classes.input} to=\"/\"><button className={classes.button}> Already have an account?</button></Link>\n    </div>\n  );\n}","/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/utils/jamAPI.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/infoHeader.js",["97","98","99","100"],"import React, {useEffect, useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: \"80%\",\n        height: \"90%\",\n        margin: \"1%\"\n    },\n    smallButton: {\n        width: \"80%\",\n        height: \"90%\",\n        margin: \"1%\"\n    },\n    buttonDiv: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        opacity: \".6\",\n        justifyContent: 'left',\n        width: \"90%\"\n        \n        \n    },\n    heading: {\n        marginLeft: \"3%\"     \n    },\n    outer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n  \n        justifyContent: 'center',\n        marginTop: '1%'\n    }\n  }));\n\n\nconst InfoHeader = (props) => {\n    const auth = useAuth();\n    const classes = useStyles();\n\n    if(props.displayFavoritesStatus && props.displayFavoritesStatus) {\n        return (\n       \n            <Grid className={classes.outer} >\n                <Grid  className={classes.buttonDiv} item>\n                    <h1>Favorites</h1>\n                </Grid>\n                \n            </Grid>\n        )\n    } else {\n        return (\n       \n            <Grid className={classes.outer} >\n                <Grid className={classes.buttonDiv} item>\n                    <h1 className={classes.heading}>Recently Added</h1>\n                    \n                </Grid>\n                <Grid item>\n                    {/* page number is the offset so divide by 4 */}\n                    <p>Page: {props.pageNumber/4 + 1}</p>\n                </Grid>\n              \n            </Grid>\n        )\n    }\n\n   \n    \n    \n};\n\n\nexport default InfoHeader;","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/profile.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Profile.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/public/About.js",["101","102","103","104"],"import React, { useRef } from 'react';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"5px\"\n\n  },\n  link: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"5px\"\n\n  },\n  submit: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"5px\"\n\n  },\n  h1: {\n    width: \"50%\",\n    marginTop: '5%',\n    textAlign: 'center'\n\n  },\n  button: {\n    width: \"100%\",\n    marginTop: '5%'\n\n  },\n  outerDiv: {\n    marginLeft: '25%',\n    width: \"50%\",\n    alignItems: 'center',\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  root: {\n    minWidth: \"80%\",\n    height: \"100%\",\n    margin: \"1%\"\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n\nexport default function About(props) {\n  const classes = useStyles();\n\n  return (\n    \n        <div className={classes.outerDiv} >\n          <h1 className={classes.h1} > About Us</h1>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                Genre:\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    Title:\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                Info:\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                Location/Server: \n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                üï∞ Time: =\n                </Typography>\n            </CardContent>\n            <CardActions>\n               \n            </CardActions>\n         </Card>\n         <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                Info:\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n               - Stuff\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                - Stuff\n                </Typography>\n            </CardContent>\n            <CardActions>\n               \n            </CardActions>\n         </Card>\n         <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                Info:\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n               - Stuff\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                - Stuff\n                </Typography>\n            </CardContent>\n            <CardActions>\n               \n            </CardActions>\n         </Card>\n\n\n          <Link  className={classes.link} to=\"/\"><button className={classes.button}> back</button></Link>\n    \n\n        </div>\n    \n  )\n\n}\n\n\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":67,"column":8,"nodeType":"111","endLine":67,"endColumn":10,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":111,"column":8,"nodeType":"111","endLine":111,"endColumn":20,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"115","line":133,"column":10,"nodeType":"111","endLine":133,"endColumn":21,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":29,"column":9,"nodeType":"119","messageId":"120","endLine":29,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":20,"column":7,"nodeType":"119","messageId":"120","endLine":20,"endColumn":11},{"ruleId":"117","severity":1,"message":"121","line":8,"column":8,"nodeType":"119","messageId":"120","endLine":8,"endColumn":13},{"ruleId":"117","severity":1,"message":"122","line":11,"column":8,"nodeType":"119","messageId":"120","endLine":11,"endColumn":16},{"ruleId":"117","severity":1,"message":"123","line":14,"column":8,"nodeType":"119","messageId":"120","endLine":14,"endColumn":16},{"ruleId":"117","severity":1,"message":"124","line":15,"column":8,"nodeType":"119","messageId":"120","endLine":15,"endColumn":25},{"ruleId":"117","severity":1,"message":"125","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"126","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":41,"column":11,"nodeType":"119","messageId":"120","endLine":41,"endColumn":15},{"ruleId":"117","severity":1,"message":"127","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":37,"column":5,"nodeType":"130","messageId":"131","endLine":37,"endColumn":15},{"ruleId":"117","severity":1,"message":"132","line":56,"column":11,"nodeType":"119","messageId":"120","endLine":56,"endColumn":15},{"ruleId":"117","severity":1,"message":"125","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":31,"column":5,"nodeType":"130","messageId":"131","endLine":31,"endColumn":15},{"ruleId":"117","severity":1,"message":"125","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"126","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":35},{"ruleId":"117","severity":1,"message":"133","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":42,"column":11,"nodeType":"119","messageId":"120","endLine":42,"endColumn":15},{"ruleId":"117","severity":1,"message":"134","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":23},{"ruleId":"117","severity":1,"message":"135","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":17},{"ruleId":"117","severity":1,"message":"133","line":8,"column":8,"nodeType":"119","messageId":"120","endLine":8,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":48,"column":5,"nodeType":"130","messageId":"131","endLine":48,"endColumn":15},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has a missing dependency: 'jamsToSearch'. Either include it or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'jamData'. Either include it or remove the dependency array. You can also do a functional update 'setJams(j => ...)' if you only need 'jamData' in the 'setJams' call.",["140"],"no-unused-vars","'auth' is assigned a value but never used.","Identifier","unusedVar","'Badge' is defined but never used.","'MenuIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","no-dupe-keys","Duplicate key 'alignItems'.","ObjectExpression","unexpected","'user' is assigned a value but never used.","'Button' is defined but never used.","'useRef' is defined but never used.","'useAuth' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [auth]",{"range":"147","text":"148"},"Update the dependencies array to be: [jamsToSearch, searchTerm]",{"range":"149","text":"150"},"Update the dependencies array to be: [jamData, postedJam]",{"range":"151","text":"152"},[1869,1871],"[auth]",[3215,3227],"[jamsToSearch, searchTerm]",[3859,3870],"[jamData, postedJam]"]