[{"/Users/thegoods/Development/jamUpReact/jamup/src/index.js":"1","/Users/thegoods/Development/jamUpReact/jamup/src/App.js":"2","/Users/thegoods/Development/jamUpReact/jamup/src/global.js":"3","/Users/thegoods/Development/jamUpReact/jamup/src/theme.js":"4","/Users/thegoods/Development/jamUpReact/jamup/src/firebase.js":"5","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js":"6","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js":"7","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js":"8","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js":"9","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js":"10","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js":"11","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js":"12","/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js":"13"},{"size":426,"mtime":1612238048410,"results":"14","hashOfConfig":"15"},{"size":1008,"mtime":1612239797037,"results":"16","hashOfConfig":"15"},{"size":658,"mtime":1611511532535,"results":"17","hashOfConfig":"15"},{"size":133,"mtime":1611507660777,"results":"18","hashOfConfig":"15"},{"size":509,"mtime":1611729582683,"results":"19","hashOfConfig":"15"},{"size":1558,"mtime":1612237725120,"results":"20","hashOfConfig":"15"},{"size":1451,"mtime":1612234349977,"results":"21","hashOfConfig":"15"},{"size":1063,"mtime":1612234324671,"results":"22","hashOfConfig":"15"},{"size":6902,"mtime":1612234312687,"results":"23","hashOfConfig":"15"},{"size":958,"mtime":1612239391167,"results":"24","hashOfConfig":"15"},{"size":1157,"mtime":1612240373027,"results":"25","hashOfConfig":"15"},{"size":1214,"mtime":1612240316489,"results":"26","hashOfConfig":"15"},{"size":2857,"mtime":1612236248932,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l4gjh",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/thegoods/Development/jamUpReact/jamup/src/index.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/App.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/global.js",[],["60","61"],"/Users/thegoods/Development/jamUpReact/jamup/src/theme.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/firebase.js",[],["62","63"],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js",["64","65","66"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PrimarySearchAppBar from './PrimaryBar'\nimport JamContainer from './JamContainer'\nimport SideMenu from './SideMenu'\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Redirect} from 'react-router-dom';\n\nconst Dashboard = (props) => {\n    const auth = useAuth();\n    const [jamData, setJams] = useState(\"\");\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n    const [filteredJams, setFilteredJams] = React.useState(\"\");\n  \n    useEffect(() => {\n      fetch('http://localhost:3000/jams')\n      .then(res => res.json())\n      .then(data => {\n        setJams(data.allJams)\n      })\n  \n     \n    }, []);\n  \n    useEffect(() => {\n      if(jamData){\n        const results = jamData.filter(jam =>\n          jam.title.toLowerCase().includes(searchTerm)\n        );\n        setFilteredJams(results);\n      }\n  \n    }, [searchTerm]);\n  \n  \n  \n    const handleJamSearch = (e) => {\n      setSearchTerm(e.target.value);\n    }\n\n  \n\n    return (\n        <div>\n            <PrimarySearchAppBar handleJamSearch={handleJamSearch}></PrimarySearchAppBar>\n            <Grid container fluid=\"true\">\n                <Grid item xs={2}>\n                    <SideMenu handleSignOut={props.handleSignOut} />\n                </Grid>\n\n                <Grid item xs={10}>\n                    <JamContainer jamData={jamData} filteredJams={filteredJams}/>\n                </Grid>\n            </Grid>\n        </div>\n      \n    )\n   \n    \n    \n};\n\n\nexport default Dashboard;","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js",["67"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 200,\n    margin: '10px'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function Jam(props) {\n  const classes = useStyles();\n  const auth = useAuth();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {props.title}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n            {props.genre}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n        {props.info}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          well meaning and kindly.\n          <br />\n          {'\"a benevolent smile\"'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js",["68"],"import React from 'react'\nimport Jam from './Jam.js'\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\nconst JamContainer = (props) => {\nconst auth = useAuth();\nif(props.filteredJams){\n    return (\n        <Grid container fluid=\"true\">\n            {props.filteredJams.map((jam, index) => {\n                return (\n                    <Grid key={index} item xs={12} sm={6}>\n                        <Jam  title={jam.title} genre={jam.genre} info={jam.info} id={jam.id}/>\n                    </Grid>\n                )\n            })}\n        </Grid>\n    )\n} else {\n    return (\n        <Grid container fluid=\"true\">\n            {props.jamData ? props.jamData.map((jam, index) => {\n                return(\n                    <Grid key={index} item xs={12} sm={6}>\n                        <Jam title={jam.title} genre={jam.genre} info={jam.info} id={jam.id}/>\n                    </Grid>\n                )\n            }) : null}\n           \n           \n        </Grid>\n    )\n}\n   \n    \n    \n};\n\n\nexport default JamContainer;","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js",["69"],"import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n  const auth = useAuth();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            jamUp\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              onChange={(e) => props.handleJamSearch(e)}\n              placeholder=\"Search Jams...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js",["70"],"/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":7,"column":10,"nodeType":"79","messageId":"80","endLine":7,"endColumn":18},{"ruleId":"77","severity":1,"message":"81","line":10,"column":11,"nodeType":"79","messageId":"80","endLine":10,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":33,"column":8,"nodeType":"84","endLine":33,"endColumn":20,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"81","line":30,"column":9,"nodeType":"79","messageId":"80","endLine":30,"endColumn":13},{"ruleId":"77","severity":1,"message":"81","line":7,"column":7,"nodeType":"79","messageId":"80","endLine":7,"endColumn":11},{"ruleId":"77","severity":1,"message":"81","line":84,"column":9,"nodeType":"79","messageId":"80","endLine":84,"endColumn":13},{"ruleId":"77","severity":1,"message":"86","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'auth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'jamData'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [jamData, searchTerm]",{"range":"92","text":"93"},[927,939],"[jamData, searchTerm]"]