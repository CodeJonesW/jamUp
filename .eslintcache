[{"/Users/thegoods/Development/jamUpReact/jamup/src/index.js":"1","/Users/thegoods/Development/jamUpReact/jamup/src/App.js":"2","/Users/thegoods/Development/jamUpReact/jamup/src/global.js":"3","/Users/thegoods/Development/jamUpReact/jamup/src/theme.js":"4","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js":"5","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js":"6","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js":"7","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js":"8","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js":"9","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js":"10","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js":"11","/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js":"12","/Users/thegoods/Development/jamUpReact/jamup/src/utils/jamAPI.js":"13","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/infoHeader.js":"14","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/profile.js":"15","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Profile.js":"16","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/About.js":"17"},{"size":426,"mtime":1612238048410,"results":"18","hashOfConfig":"19"},{"size":1306,"mtime":1613276540396,"results":"20","hashOfConfig":"19"},{"size":658,"mtime":1613276132072,"results":"21","hashOfConfig":"19"},{"size":133,"mtime":1611507660777,"results":"22","hashOfConfig":"19"},{"size":11323,"mtime":1613666006963,"results":"23","hashOfConfig":"19"},{"size":2136,"mtime":1613187185671,"results":"24","hashOfConfig":"19"},{"size":2685,"mtime":1613168404480,"results":"25","hashOfConfig":"19"},{"size":6053,"mtime":1613677056021,"results":"26","hashOfConfig":"19"},{"size":2097,"mtime":1613665780164,"results":"27","hashOfConfig":"19"},{"size":1983,"mtime":1613278580311,"results":"28","hashOfConfig":"19"},{"size":2026,"mtime":1612846076906,"results":"29","hashOfConfig":"19"},{"size":2857,"mtime":1612236248932,"results":"30","hashOfConfig":"19"},{"size":3578,"mtime":1613663734084,"results":"31","hashOfConfig":"19"},{"size":1775,"mtime":1613191103584,"results":"32","hashOfConfig":"19"},{"size":152,"mtime":1613196540041,"results":"33","hashOfConfig":"19"},{"size":152,"mtime":1613196540041,"results":"34","hashOfConfig":"19"},{"size":3580,"mtime":1613278306357,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"l4gjh",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"/Users/thegoods/Development/jamUpReact/jamup/src/index.js",[],["79","80"],"/Users/thegoods/Development/jamUpReact/jamup/src/App.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/global.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/theme.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js",["81","82","83"],"import React, { useState, useEffect, useRef } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport InfoHeader from './infoHeader'\nimport PrimarySearchAppBar from './PrimaryBar'\nimport JamContainer from './JamContainer'\nimport SideMenu from './SideMenu'\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport jamCalls from '../../utils/jamAPI'\n\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    color: \"black\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n}));\n\nconst Dashboard = (props) => {\n    const auth = useAuth();\n    const classes = useStyles();\n    const [loggedInUserId, setUserId] = useState(null)\n\n  // load in all jams on page\n  const [jamData, setJams] = useState(\"\");\n    useEffect( () => {\n      // using set timeout to allow time for firebase and my db to create user so that \n      // we can grab the user by uid\n      setTimeout(function(){\n\n        jamCalls.getUserByUid(auth.user.uid)\n        .then((data) => {\n          if(data.msg){\n            auth.signout()\n          }\n          console.log(data)\n          // console.log(\"here\", data.userInfo[0].id)\n          setUserId(data.userInfo[0].id)\n          jamCalls.findUserFavoriteJams(data.userInfo[0].id)\n          .then((userFavoriteJamData) => {\n          setUserFavoriteJams(userFavoriteJamData.userFavoriteJams)\n\n        })\n      }, 2000);\n      \n      })\n     \n      jamCalls.getAllJams()\n      .then(data => {\n        setJams(data.allJams)\n      })\n\n\n     \n    }, []);\n\n\n// --------------------------------------------------\n// FILTER JAMS KEYWORDS (SEARCH)\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredJams, setFilteredJams] = useState(\"\");\n  const [jamsToSearch, setJamsToSearch] = useState(\"\");\n    // refactor to use DB\n    useEffect(() => {\n      // if the search term does not exist grab the jams by page via get all jams\n      // set the two states involving search to false so that correct data renders\n      // and return\n      if(!searchTerm) {\n          jamCalls.getAllJams()\n          .then(data => {\n          setJamsToSearch(false)\n          setFilteredJams(false)\n          setJams(data.allJams)\n          return\n        })\n      } else {\n        // otherwise grab all the grabs from the db and set to state\n        // jams to search\n        jamCalls.getAllJamsForSearch()\n        .then(data => {\n          setJamsToSearch(data.allJams)\n\n        });\n\n      // if this state has been populated there is a current search term\n      if(jamsToSearch){\n        // filter results\n        const results = jamsToSearch.filter(jam =>\n          jam.title.toLowerCase().includes(searchTerm)\n        );\n        setFilteredJams(results);\n        // the existence of this ^ state will trigger a rendering of different data in the \n        // jam container\n      }\n  \n      } \n\n    }, [searchTerm]);\n  \n    // this runs onchange in search filtering jams\n    const handleJamSearch = (e) => {\n      setSearchTerm(e.target.value);\n    }\n\n\n\n// -------------------------------------------------------------\n// POST NEW JAM\n    // --------------------------------------------------\n    // state and useEffect for when posting new jam\n    const [postedJam, setJam] = useState('')\n    useEffect(() => {\n    // if posted jam changes repopulate state with all previous + new   \n        if(postedJam){\n          console.log('newjam', postedJam)\n          jamData.pop()\n          setJams([postedJam, ...jamData])\n        }\n        \n      }, [postedJam]);\n\n\n      const handlePost = (e) => {\n        // console.log(e)\n        // data from new jam form\n        // post to server\n        if(!jamDate.current.value || !jamTime.current.value) {\n          alert(\"Jams must have a date and time\")\n          return\n        }\n        let newJam = {\n          title: jamTitleInput.current.value,\n          genre: jamGenreInput.current.value,\n          info: jamInfoInput.current.value,\n          jamDate: jamDate.current.value,\n          jamTime: jamTime.current.value,\n          location: jamLocation.current.value,\n          userId: loggedInUserId\n        }\n\n     \n        \n        \n          jamCalls.postJam(newJam)\n          .then((data) => {\n            // changing jamDate to hold utc so correct time is displayed immediately after post\n            const d = new Date(newJam.jamDate + \"T\" + newJam.jamTime);\n            const newUtcDate = d.toUTCString();\n            newJam.jamDate = newUtcDate\n            // grab new jam id and append it to the jam about to be posted to state\n            newJam.id = data.createdJamId\n             // set new jam state\n            setJam(newJam)\n            // turn off modal\n            togglePostModal()\n          })\n    \n        }\n    \n\n        // state for post new jam via modal\n        const [open, setOpen] = useState(false);\n\n        // modal open and close functions\n        const togglePostModal = () => {\n          setOpen(!open);\n        };\n        \n\n        // add new refs for new inputs time date location\n        const jamTitleInput = useRef(null);\n        const jamGenreInput = useRef(null);\n        const jamInfoInput = useRef(null);\n        const jamTime = useRef(null);\n        const jamDate = useRef(null);\n        const jamLocation = useRef(null);\n        // html for  post modal\n        const body = (\n          <div className={classes.paper}>\n            <h2 id=\"simple-modal-title\">Create a New Jam</h2>\n            <input ref={jamTitleInput} placeholder=\"Jam Title\"/>\n            <input ref={jamInfoInput} placeholder=\"Info\"/>\n            <input ref={jamGenreInput} placeholder=\"Genre\"/>\n            <input ref={jamTime}type=\"time\"/>\n            <input ref={jamDate}type=\"date\"/>\n            <input ref={jamLocation} placeholder=\"Location\"></input>\n            <button onClick={(e) => handlePost(e)}>Create Jam</button>\n          </div>\n        );\n\n\n\n\n\n// ----------------------------------------------------------\n// POST/TOGGLE FAVORITE JAM\n\n            const postFavoriteJam = (e) => {\n              let likedJamId = e.currentTarget.dataset.jamid\n              console.log(e.currentTarget)\n              console.log(e.currentTarget.dataset.jamid)\n              jamCalls.postFavoriteJam(likedJamId, loggedInUserId).then((data) => {\n                console.log(data)\n                setUserFavoriteJams(data.userFavoriteJams)\n                alert(data.msg)\n\n              }) \n            }\n\n\n// --------------------------------------------------------------\n// Delete User's Jam\n\n            const handleDeleteJam = (e) => {\n              let jamIdToDelete = e.currentTarget.dataset.jamid\n              let answer = window.confirm(\"Are you sure you want to delete this jam?\")\n              if (answer) {\n                jamCalls.deleteJamById(jamIdToDelete, loggedInUserId, pageNumber)\n                .then(data => {\n                  setJams(data.allJams)\n                })\n                \n              } else {\n                return\n              }\n\n            }\n\n// --------------------------------------------------------------\n// FILTER FOR USERS FAVORITES\n            const [displayFavorites, toggleDisplayFavorites] = useState(false)\n            const [userFavoriteJams, setUserFavoriteJams] = useState(null)\n            useEffect(() => {\n              console.log(\"User Favorite Jams: \",userFavoriteJams)\n            }, [userFavoriteJams])\n\n            const handleShowFavorites = async () => {\n              toggleDisplayFavorites(!displayFavorites)\n              let data = await jamCalls.findUserFavoriteJams(loggedInUserId)\n                // console.log(data, displayFavorites)\n                setUserFavoriteJams(data.userFavoriteJams)\n                \n            }\n\n            useEffect(() => {\n              // console.log(displayFavorites)\n            }, [displayFavorites]);\n\n\n// ---------------------------------------------------\n// Handle Learn More Modal\n// modal to come\n       \n        const handleLearnMore = (e, props) => {\n          console.log(e.currentTarget)\n          console.log(props)\n          jamCalls.findUsersWhoFavoritedJam(props.id)\n          .then((data) => {\n            console.log(\"users who like jam\", data.usersWhoFavoriteJamId)\n            alert(`Users who have Favorited this Jam: ${data.usersWhoFavoriteJamId.length}`)\n            \n          })\n        }\n\n\n// ------------------------------------------------------\n// Handle Pages of Jams\n        const [pageNumber, setPageNumber] = useState(0)\n\n        const handleNextPage = () => {\n          if(jamData.length < 4) {\n            alert(\"No more jams\")\n            return\n          }\n          console.log(\"Page number is \", pageNumber, \"currently. about to Increase by 4\")\n          setPageNumber(pageNumber + 4)\n        }\n\n        const handlePreviousPage = () => {\n          if(pageNumber === 0){\n            alert(\"No previous jams\")\n            return\n          }\n          console.log(\"Page number is \", pageNumber, \"currently. about to Increase by 4\")\n          setPageNumber(pageNumber - 4)\n        }\n\n        useEffect(() => {\n          console.log(\"page increase\")\n\n          // if display favorites is true adjust a new state for \n          // Favorites Page number and implementpagination\n          jamCalls.getAllJams(pageNumber)\n          .then(data => {\n            setJams(data.allJams)\n          })\n        }, [pageNumber])\n\n       \n\n    return (\n        <div>\n            {/* APP BAR AND BUTTONS BELOW  */}\n            <PrimarySearchAppBar handleJamSearch={handleJamSearch}></PrimarySearchAppBar>\n            <SideMenu displayFavorites={displayFavorites} handlePreviousPage={handlePreviousPage} handleNextPage={handleNextPage} handleShowFavorites={handleShowFavorites} togglePostModal={togglePostModal} handlePost={handlePost}/>\n            {/* ------------------------------------------------------------ */}\n            <InfoHeader pageNumber={pageNumber} displayFavoritesStatus={displayFavorites}/>\n            {/* POST NEW JAM MODAL */}\n            <Modal\n              open={open}\n              onClose={togglePostModal}\n              className={classes.modal}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              closeAfterTransition\n              BackdropComponent={Backdrop}\n              BackdropProps={{\n                timeout: 500,\n              }}\n            >\n              <Fade in={open}>\n                {body}\n              </Fade>\n            \n            </Modal>\n            {/* LEARN MORE MODAL */}\n            \n            {/* CONTAINER OF AVALIABLE JAMS */}\n            \n            <JamContainer handleLearnMore={handleLearnMore} handleDeleteJam={handleDeleteJam} loggedInUserId={loggedInUserId} displayFavorites={displayFavorites} userFavoriteJams={userFavoriteJams} postFavoriteJam={postFavoriteJam} jamData={jamData} filteredJams={filteredJams}/>\n        </div>\n      \n    )\n   \n    \n    \n};\n\n\nexport default Dashboard;","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js",["84"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100%\",\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function Jam(props) {\n  const classes = useStyles();\n  const auth = useAuth();\n  // console.log(props.jamDate)\n\n  const date = new Date(props.jamDate);\n  let dateArray = date.toString().split(\" \")\n  let renderDate = dateArray[0] + \", \" + dateArray[1] + \" \" + dateArray[2] + \", \" + dateArray[3] + \" \" + dateArray[4] + \" \" + dateArray[6][1] + dateArray[7][0] + dateArray[8][0] \n\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        {props.genre}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n            {props.title}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n        Info: {props.info}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Location/Server: {props.location}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          🕰 Time: {renderDate}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button data-jamid={props.id} onClick={(e) => props.handleLearnMore(e, props)} size=\"small\">Learn More</Button>\n        <Button data-jamid={props.id} onClick={(e) => props.postFavoriteJam(e)} size=\"small\">❤️</Button>\n        {props.loggedInUserId === props.userId ? <Button data-jamid={props.id} onClick={(e) => props.handleDeleteJam(e)}size=\"small\">🗑</Button> : null}\n      </CardActions>\n    </Card>\n  );\n}\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js",["85"],"import React from 'react'\nimport Jam from './Jam.js'\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    jamDiv: {\n      padding: \"1%\",\n    },\n    jamContainer: {\n        padding: \"1%\",\n      }\n  });\n\n\nconst JamContainer = (props) => {\nconst classes = useStyles();\nconst auth = useAuth();\nif(props.filteredJams){\n    return (\n        <Grid className={classes.jamContainer} container fluid=\"true\">\n            {props.filteredJams.map((jam, index) => {\n                return (\n                    <Grid className={classes.jamDiv} key={index} item xs={12} sm={6}>\n                        <Jam jamDate={jam.jamDate} handleLearnMore={props.handleLearnMore} handleDeleteJam={props.handleDeleteJam} loggedInUserId={props.loggedInUserId} postFavoriteJam={(e) => props.postFavoriteJam(e)} title={jam.title} genre={jam.genre} info={jam.info} id={jam.id} userId={jam.userId} location={jam.location}/>\n                    </Grid>\n                )\n            })}\n        </Grid>\n    )\n} else if(props.displayFavorites && props.userFavoriteJams) {\n    return (\n        <Grid className={classes.jamContainer} container fluid=\"true\">\n        {/* {console.log(\"second return\", props.userFavoriteJams)} */}\n            {props.userFavoriteJams.map((jam, index) => {\n               \n                return (\n                    <Grid className={classes.jamDiv} key={index} item xs={12} sm={6}>\n                        <Jam jamDate={jam.jamDate} handleLearnMore={props.handleLearnMore} handleDeleteJam={props.handleDeleteJam} loggedInUserId={props.loggedInUserId} postFavoriteJam={(e) => props.postFavoriteJam(e)} title={jam.title} genre={jam.genre} info={jam.info} id={jam.jamId} userId={jam.userId} location={jam.location}/>\n                    </Grid>\n                )\n            })}\n        </Grid>\n    )\n} else {\n    return (\n        <Grid className={classes.jamContainer} container fluid=\"true\">\n            {props.jamData ? props.jamData.map((jam, index) => {\n                return(\n                    <Grid className={classes.jamDiv} key={index} item xs={12} sm={6}>\n                        <Jam jamDate={jam.jamDate} handleLearnMore={props.handleLearnMore} handleDeleteJam={props.handleDeleteJam} loggedInUserId={props.loggedInUserId} postFavoriteJam={(e) => props.postFavoriteJam(e)} title={jam.title} genre={jam.genre} info={jam.info} id={jam.id} userId={jam.userId} location={jam.location}/>\n                    </Grid>\n                )\n            }) : null}\n           \n           \n        </Grid>\n    )\n}\n   \n    \n    \n};\n\n\nexport default JamContainer;","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js",["86","87","88","89"],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js",["90","91","92"],"import React, {useEffect, useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: \"80%\",\n        height: \"90%\",\n        margin: \"1%\"\n    },\n    smallButton: {\n        width: \"80%\",\n        height: \"90%\",\n        margin: \"1%\"\n    },\n    buttonDiv: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        width: \"90%\"\n        \n        \n    },\n    outer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        marginTop: '1%'\n    }\n  }));\n\n\nconst SideMenu = (props) => {\n    const auth = useAuth();\n    const classes = useStyles();\n\n\n    return (\n        <Grid className={classes.outer} >\n            <Grid  className={classes.buttonDiv} item>\n                <Button className={classes.button} onClick={() => props.togglePostModal()} variant=\"contained\">Jam 🎹 </Button>\n            </Grid>\n            <Grid className={classes.buttonDiv} item>\n                <Button className={classes.button} variant=\"contained\" onClick={() => props.handleShowFavorites()}>Favs ❤️</Button>\n            </Grid>\n            <Grid className={classes.buttonDiv} item>\n               🥁\n            </Grid>\n            <Grid className={classes.buttonDiv} item>\n                {props.displayFavorites ? null : <Button  onClick={props.handlePreviousPage}className={classes.smallButton} variant=\"contained\"> ⬅️</Button>}\n            </Grid>\n            <Grid className={classes.buttonDiv} item>\n                {props.displayFavorites ? null : <Button onClick={props.handleNextPage} className={classes.smallButton} variant=\"contained\"> ➡️</Button>}\n            </Grid>\n          \n            \n        </Grid>\n    )\n   \n    \n    \n};\n\n\nexport default SideMenu;","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js",["93","94","95"],"import React, { useRef } from 'react';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Row } from 'react-bootstrap';\n\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"1px\"\n  },\n  link: {\n    width: \"24%\",\n    marginTop: '5%',\n    margin: \"1%\",\n    borderRadius: \"1px\"\n  },\n  h1: {\n    width: \"50%\",\n    marginTop: '5%',\n    textAlign: 'center'\n\n  },\n  button: {\n    width: \"100%\",\n\n  },\n  outerDiv: {\n    marginTop: '10%',\n    width: \"100%\",\n    alignItems: 'center',\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  linkDiv: {\n    display:\"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: 'center',\n  }\n}));\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  const auth = useAuth()\n  const signInEmailInput = useRef(null);\n  const signInPasswordInput = useRef(null);\n\n  const handleSubmit = () => {\n    const user = auth.signin(signInEmailInput.current.value, signInPasswordInput.current.value)\n  }\n  return (\n    <div className={classes.body}>\n        <div className={classes.outerDiv} >\n          <h1 className={classes.h1} >JamUp</h1>\n\n          <input className={classes.input} ref={signInEmailInput} placeholder=\"Email\" />\n          <input className={classes.input} type=\"password\" ref={signInPasswordInput} placeholder=\"password\" />\n          <button className={classes.input} onClick={handleSubmit} >Submit </button>\n          <div className={classes.linkDiv}>\n          <Link  className={classes.link} to=\"/signup\"><button className={classes.button}> Click to Sign Up</button></Link>\n          <Link  className={classes.link} to=\"/about\"><button className={classes.button}> Learn About Us</button></Link>\n\n          </div>\n\n\n        </div>\n    </div>\n    \n  )\n\n}\n\n\n\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js",["96","97"],"import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Link } from 'react-router-dom';\nimport jamCalls from '../../utils/jamAPI'\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: \"50%\",\n    marginTop: '5%'\n\n  },\n  h1: {\n    width: \"50%\",\n    marginTop: '5%',\n    textAlign: 'center'\n\n  },\n  button: {\n    width: \"100%\",\n    marginTop: '5%'\n\n  },\n  outerDiv: {\n    marginTop: '10%',\n    width: \"100%\",\n    alignItems: 'center',\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex'\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const auth = useAuth();\n  const signUpEmailInput = useRef(null);\n  const signUpPasswordInput = useRef(null);\n  const signUpConfirmPasswordInput = useRef(null);\n  \n  const handleSubmit = async (e) => {\n    if(signUpPasswordInput.current.value !== signUpConfirmPasswordInput.current.value){\n      alert(\"Passwords do not match\")\n      signUpConfirmPasswordInput.current.focus();\n      return\n    }\n    let password = signUpPasswordInput.current.value\n    let user = await auth.signup(signUpEmailInput.current.value, password)\n    jamCalls.postUser({\"email\": user.email, \"firebase\": user.uid})\n  }\n\n  return (\n    <div className={classes.outerDiv}>\n    <h1 className={classes.h1}>Sign up with email and password</h1>\n  \n        <input className={classes.input} ref={signUpEmailInput} placeholder=\"Email\"/>\n        <input type=\"password\" className={classes.input}ref={signUpPasswordInput} placeholder=\"Password\"/>\n        <input type=\"password\" className={classes.input}ref={signUpConfirmPasswordInput} placeholder=\"Confirm Password\"/>\n        <button className={classes.input} onClick={(e) => handleSubmit(e)}>submit</button>\n        <Link className={classes.input} to=\"/\"><button className={classes.button}> Already have an account?</button></Link>\n    </div>\n  );\n}","/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/utils/jamAPI.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/infoHeader.js",["98","99","100","101"],"import React, {useEffect, useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: \"80%\",\n        height: \"90%\",\n        margin: \"1%\"\n    },\n    smallButton: {\n        width: \"80%\",\n        height: \"90%\",\n        margin: \"1%\"\n    },\n    buttonDiv: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        opacity: \".6\",\n        justifyContent: 'left',\n        width: \"90%\"\n        \n        \n    },\n    heading: {\n        marginLeft: \"3%\"     \n    },\n    outer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n  \n        justifyContent: 'center',\n        marginTop: '1%'\n    }\n  }));\n\n\nconst InfoHeader = (props) => {\n    const auth = useAuth();\n    const classes = useStyles();\n\n    if(props.displayFavoritesStatus && props.displayFavoritesStatus) {\n        return (\n       \n            <Grid className={classes.outer} >\n                <Grid  className={classes.buttonDiv} item>\n                    <h1>Favorites</h1>\n                </Grid>\n                \n            </Grid>\n        )\n    } else {\n        return (\n       \n            <Grid className={classes.outer} >\n                <Grid className={classes.buttonDiv} item>\n                    <h1 className={classes.heading}>Recently Added</h1>\n                    \n                </Grid>\n                <Grid item>\n                    {/* page number is the offset so divide by 4 */}\n                    <p>Page: {props.pageNumber/4 + 1}</p>\n                </Grid>\n              \n            </Grid>\n        )\n    }\n\n   \n    \n    \n};\n\n\nexport default InfoHeader;","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/profile.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Profile.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/public/About.js",["102","103","104","105"],"import React, { useRef } from 'react';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"5px\"\n\n  },\n  link: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"5px\"\n\n  },\n  submit: {\n    width: \"50%\",\n    marginTop: '5%',\n    borderRadius: \"5px\"\n\n  },\n  h1: {\n    width: \"50%\",\n    marginTop: '5%',\n    textAlign: 'center'\n\n  },\n  button: {\n    width: \"100%\",\n    marginTop: '5%'\n\n  },\n  outerDiv: {\n    marginLeft: '25%',\n    width: \"50%\",\n    alignItems: 'center',\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  root: {\n    minWidth: \"80%\",\n    height: \"100%\",\n    margin: \"1%\"\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n\nexport default function About(props) {\n  const classes = useStyles();\n\n  return (\n    \n        <div className={classes.outerDiv} >\n          <h1 className={classes.h1} > About Us</h1>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                Genre:\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    Title:\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                Info:\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                Location/Server: \n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                🕰 Time: =\n                </Typography>\n            </CardContent>\n            <CardActions>\n               \n            </CardActions>\n         </Card>\n         <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                Info:\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n               - Stuff\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                - Stuff\n                </Typography>\n            </CardContent>\n            <CardActions>\n               \n            </CardActions>\n         </Card>\n         <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                Info:\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n               - Stuff\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                - Stuff\n                </Typography>\n            </CardContent>\n            <CardActions>\n               \n            </CardActions>\n         </Card>\n\n\n          <Link  className={classes.link} to=\"/\"><button className={classes.button}> back</button></Link>\n    \n\n        </div>\n    \n  )\n\n}\n\n\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":67,"column":8,"nodeType":"112","endLine":67,"endColumn":10,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":111,"column":8,"nodeType":"112","endLine":111,"endColumn":20,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"116","line":133,"column":10,"nodeType":"112","endLine":133,"endColumn":21,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":29,"column":9,"nodeType":"120","messageId":"121","endLine":29,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":20,"column":7,"nodeType":"120","messageId":"121","endLine":20,"endColumn":11},{"ruleId":"118","severity":1,"message":"122","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":13},{"ruleId":"118","severity":1,"message":"123","line":11,"column":8,"nodeType":"120","messageId":"121","endLine":11,"endColumn":16},{"ruleId":"118","severity":1,"message":"124","line":14,"column":8,"nodeType":"120","messageId":"121","endLine":14,"endColumn":16},{"ruleId":"118","severity":1,"message":"125","line":15,"column":8,"nodeType":"120","messageId":"121","endLine":15,"endColumn":25},{"ruleId":"118","severity":1,"message":"126","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"127","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":41,"column":11,"nodeType":"120","messageId":"121","endLine":41,"endColumn":15},{"ruleId":"118","severity":1,"message":"128","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":37,"column":5,"nodeType":"131","messageId":"132","endLine":37,"endColumn":15},{"ruleId":"118","severity":1,"message":"133","line":56,"column":11,"nodeType":"120","messageId":"121","endLine":56,"endColumn":15},{"ruleId":"118","severity":1,"message":"126","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":31,"column":5,"nodeType":"131","messageId":"132","endLine":31,"endColumn":15},{"ruleId":"118","severity":1,"message":"126","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"127","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},{"ruleId":"118","severity":1,"message":"134","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":42,"column":11,"nodeType":"120","messageId":"121","endLine":42,"endColumn":15},{"ruleId":"118","severity":1,"message":"135","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":23},{"ruleId":"118","severity":1,"message":"136","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":17},{"ruleId":"118","severity":1,"message":"134","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":48,"column":5,"nodeType":"131","messageId":"132","endLine":48,"endColumn":15},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'jamsToSearch'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'jamData'. Either include it or remove the dependency array. You can also do a functional update 'setJams(j => ...)' if you only need 'jamData' in the 'setJams' call.",["141"],"no-unused-vars","'auth' is assigned a value but never used.","Identifier","unusedVar","'Badge' is defined but never used.","'MenuIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","no-dupe-keys","Duplicate key 'alignItems'.","ObjectExpression","unexpected","'user' is assigned a value but never used.","'Button' is defined but never used.","'useRef' is defined but never used.","'useAuth' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [auth]",{"range":"148","text":"149"},"Update the dependencies array to be: [jamsToSearch, searchTerm]",{"range":"150","text":"151"},"Update the dependencies array to be: [jamData, postedJam]",{"range":"152","text":"153"},[1869,1871],"[auth]",[3215,3227],"[jamsToSearch, searchTerm]",[3859,3870],"[jamData, postedJam]"]