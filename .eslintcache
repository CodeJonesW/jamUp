[{"/Users/thegoods/Development/jamUpReact/jamup/src/index.js":"1","/Users/thegoods/Development/jamUpReact/jamup/src/App.js":"2","/Users/thegoods/Development/jamUpReact/jamup/src/global.js":"3","/Users/thegoods/Development/jamUpReact/jamup/src/theme.js":"4","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js":"5","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js":"6","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js":"7","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js":"8","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js":"9","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js":"10","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js":"11","/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js":"12","/Users/thegoods/Development/jamUpReact/jamup/src/utils/jamAPI.js":"13"},{"size":426,"mtime":1612238048410,"results":"14","hashOfConfig":"15"},{"size":1016,"mtime":1612598340971,"results":"16","hashOfConfig":"15"},{"size":658,"mtime":1611511532535,"results":"17","hashOfConfig":"15"},{"size":133,"mtime":1611507660777,"results":"18","hashOfConfig":"15"},{"size":10146,"mtime":1613168287623,"results":"19","hashOfConfig":"15"},{"size":2130,"mtime":1613102371797,"results":"20","hashOfConfig":"15"},{"size":2685,"mtime":1613168404480,"results":"21","hashOfConfig":"15"},{"size":6917,"mtime":1613167297993,"results":"22","hashOfConfig":"15"},{"size":2113,"mtime":1613150631436,"results":"23","hashOfConfig":"15"},{"size":1471,"mtime":1612594953068,"results":"24","hashOfConfig":"15"},{"size":2026,"mtime":1612846076906,"results":"25","hashOfConfig":"15"},{"size":2857,"mtime":1612236248932,"results":"26","hashOfConfig":"15"},{"size":3364,"mtime":1613151823949,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"l4gjh",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/thegoods/Development/jamUpReact/jamup/src/index.js",[],["59","60"],"/Users/thegoods/Development/jamUpReact/jamup/src/App.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/global.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/theme.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Dashboard.js",["61","62","63","64"],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/Jam.js",["65"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100%\",\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function Jam(props) {\n  const classes = useStyles();\n  const auth = useAuth();\n  // console.log(props.jamDate)\n\n  const date = new Date(props.jamDate);\n  let dateArray = date.toString().split(\" \")\n  let renderDate = dateArray[0] + \", \" + dateArray[1] + \" \" + dateArray[2] + \", \" + dateArray[3] + \" \" + dateArray[4] + \" \" + dateArray[6][1] + dateArray[7][0] + dateArray[8][0] \n\n\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        {props.genre}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n            {props.title}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n        Info: {props.info}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Location: {props.location}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          üï∞ Time: {renderDate}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button data-jamid={props.id} onClick={(e) => props.handleLearnMore(e, props)} size=\"small\">Learn More</Button>\n        <Button data-jamid={props.id} onClick={(e) => props.postFavoriteJam(e)} size=\"small\">‚ù§Ô∏è</Button>\n        {props.loggedInUserId === props.userId ? <Button data-jamid={props.id} onClick={(e) => props.handleDeleteJam(e)}size=\"small\">üóë</Button> : null}\n      </CardActions>\n    </Card>\n  );\n}\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/private/JamContainer.js",["66"],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/PrimaryBar.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/components/private/SideMenu.js",["67","68"],"import React, {useEffect, useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useAuth } from \"../../Hooks/use-auth\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: \"80%\",\n        height: \"90%\",\n        margin: \"1%\"\n    },\n    smallButton: {\n        width: \"80%\",\n        height: \"90%\",\n        margin: \"1%\"\n    },\n    buttonDiv: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        width: \"90%\"\n        \n        \n    },\n    outer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        marginTop: '1%'\n    }\n  }));\n\n\nconst SideMenu = (props) => {\n    const auth = useAuth();\n    const classes = useStyles();\n\n\n    return (\n        <Grid className={classes.outer} >\n            <Grid  className={classes.buttonDiv} item>\n                <Button className={classes.button} onClick={() => props.togglePostModal()} variant=\"contained\">Jam üéπ </Button>\n            </Grid>\n            <Grid className={classes.buttonDiv} item>\n                <Button className={classes.button} variant=\"contained\" onClick={() => props.handleShowFavorites()}>Favs ‚ù§Ô∏è</Button>\n            </Grid>\n            <Grid className={classes.buttonDiv} item>\n                <Button onClick={props.handlePreviousPage}className={classes.smallButton} variant=\"contained\"> ‚¨ÖÔ∏è</Button>\n            </Grid>\n            <Grid className={classes.buttonDiv} item>\n                <Button onClick={props.handleNextPage} className={classes.smallButton} variant=\"contained\"> ‚û°Ô∏è</Button>\n            </Grid>\n            <Grid className={classes.buttonDiv} item>\n                <Button className={classes.button} onClick={auth.signout} variant=\"contained\">Logout‚òÇÔ∏è</Button>\n            </Grid>\n            \n        </Grid>\n    )\n   \n    \n    \n};\n\n\nexport default SideMenu;","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignIn.js",["69","70"],"import React, { useRef } from 'react';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: \"50%\",\n    marginTop: '5%'\n\n  },\n  h1: {\n    width: \"50%\",\n    marginTop: '5%',\n    textAlign: 'center'\n\n  },\n  button: {\n    width: \"100%\",\n    marginTop: '5%'\n\n  },\n  outerDiv: {\n    marginTop: '10%',\n    width: \"100%\",\n    alignItems: 'center',\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex'\n  },\n}));\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  const auth = useAuth()\n  const signInEmailInput = useRef(null);\n  const signInPasswordInput = useRef(null);\n\n  const handleSubmit = () => {\n    const user = auth.signin(signInEmailInput.current.value, signInPasswordInput.current.value)\n  }\n  return (\n    <div className={classes.outerDiv} >\n      <h1 className={classes.h1} >JamUp</h1>\n\n      <input className={classes.input} ref={signInEmailInput} placeholder=\"Email\" />\n      <input className={classes.input} type=\"password\" ref={signInPasswordInput} placeholder=\"password\" />\n      <button className={classes.input} onClick={handleSubmit} >Submit </button>\n      <Link  className={classes.input} to=\"/signup\"><button className={classes.button}> Click to Sign Up</button></Link>\n \n\n    </div>\n  )\n\n}\n\n\n\n","/Users/thegoods/Development/jamUpReact/jamup/src/components/public/SignUp.js",["71","72"],"import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAuth } from \"../../Hooks/use-auth\";\nimport { Link } from 'react-router-dom';\nimport jamCalls from '../../utils/jamAPI'\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: \"50%\",\n    marginTop: '5%'\n\n  },\n  h1: {\n    width: \"50%\",\n    marginTop: '5%',\n    textAlign: 'center'\n\n  },\n  button: {\n    width: \"100%\",\n    marginTop: '5%'\n\n  },\n  outerDiv: {\n    marginTop: '10%',\n    width: \"100%\",\n    alignItems: 'center',\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    display: 'flex'\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const auth = useAuth();\n  const signUpEmailInput = useRef(null);\n  const signUpPasswordInput = useRef(null);\n  const signUpConfirmPasswordInput = useRef(null);\n  \n  const handleSubmit = async (e) => {\n    if(signUpPasswordInput.current.value !== signUpConfirmPasswordInput.current.value){\n      alert(\"Passwords do not match\")\n      signUpConfirmPasswordInput.current.focus();\n      return\n    }\n    let password = signUpPasswordInput.current.value\n    let user = await auth.signup(signUpEmailInput.current.value, password)\n    jamCalls.postUser({\"email\": user.email, \"firebase\": user.uid})\n  }\n\n  return (\n    <div className={classes.outerDiv}>\n    <h1 className={classes.h1}>Sign up with email and password</h1>\n  \n        <input className={classes.input} ref={signUpEmailInput} placeholder=\"Email\"/>\n        <input type=\"password\" className={classes.input}ref={signUpPasswordInput} placeholder=\"Password\"/>\n        <input type=\"password\" className={classes.input}ref={signUpConfirmPasswordInput} placeholder=\"Confirm Password\"/>\n        <button className={classes.input} onClick={(e) => handleSubmit(e)}>submit</button>\n        <Link className={classes.input} to=\"/\"><button className={classes.button}> Already have an account?</button></Link>\n    </div>\n  );\n}","/Users/thegoods/Development/jamUpReact/jamup/src/Hooks/use-auth.js",[],"/Users/thegoods/Development/jamUpReact/jamup/src/utils/jamAPI.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":64,"column":8,"nodeType":"79","endLine":64,"endColumn":10,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":70,"column":10,"nodeType":"83","messageId":"84","endLine":70,"endColumn":20},{"ruleId":"81","severity":1,"message":"85","line":71,"column":24,"nodeType":"83","messageId":"84","endLine":71,"endColumn":39},{"ruleId":"77","severity":1,"message":"86","line":109,"column":10,"nodeType":"79","endLine":109,"endColumn":21,"suggestions":"87"},{"ruleId":"81","severity":1,"message":"88","line":29,"column":9,"nodeType":"83","messageId":"84","endLine":29,"endColumn":13},{"ruleId":"81","severity":1,"message":"88","line":20,"column":7,"nodeType":"83","messageId":"84","endLine":20,"endColumn":11},{"ruleId":"81","severity":1,"message":"89","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"90","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":35},{"ruleId":"91","severity":1,"message":"92","line":31,"column":5,"nodeType":"93","messageId":"94","endLine":31,"endColumn":15},{"ruleId":"81","severity":1,"message":"95","line":44,"column":11,"nodeType":"83","messageId":"84","endLine":44,"endColumn":15},{"ruleId":"81","severity":1,"message":"89","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":31,"column":5,"nodeType":"93","messageId":"94","endLine":31,"endColumn":15},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["98"],"no-unused-vars","'searchTerm' is assigned a value but never used.","Identifier","unusedVar","'setFilteredJams' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'jamData'. Either include it or remove the dependency array. You can also do a functional update 'setJams(j => ...)' if you only need 'jamData' in the 'setJams' call.",["99"],"'auth' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'alignItems'.","ObjectExpression","unexpected","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [auth]",{"range":"104","text":"105"},"Update the dependencies array to be: [jamData, postedJam]",{"range":"106","text":"107"},[1824,1826],"[auth]",[3054,3065],"[jamData, postedJam]"]